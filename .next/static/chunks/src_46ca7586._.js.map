{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;KArBS;AAuBT,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB;MAzBS","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  Monitor, \n  BarChart3, \n  FileText, \n  Settings, \n  Users, \n  Database,\n  Activity,\n  Server,\n  List,\n  ChevronDown,\n  ChevronRight\n} from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface SidebarProps {\n  collapsed: boolean;\n  onToggle: () => void;\n}\n\nconst menuItems = [\n  {\n    title: \"Data Center\",\n    icon: Database,\n    children: [\n      { title: \"Monitor\", icon: Monitor, active: true },\n      { title: \"Usage Statistics\", icon: BarChart3 },\n      { title: \"clientErrLog\", icon: FileText }\n    ]\n  },\n  {\n    title: \"Applications\",\n    icon: Server,\n    children: [\n      { title: \"Reserve Applications\", icon: List },\n      { title: \"Run Applications\", icon: Activity },\n      { title: \"Synchronization List\", icon: List },\n      { title: \"Client List\", icon: Users }\n    ]\n  },\n  {\n    title: \"Group Mgt\",\n    icon: Users\n  },\n  {\n    title: \"System Setting\",\n    icon: Settings,\n    children: [\n      { title: \"Users\", icon: Users }\n    ]\n  }\n];\n\nexport function Sidebar({ collapsed, onToggle }: SidebarProps) {\n  const [expandedItems, setExpandedItems] = useState<string[]>([\"Data Center\"]);\n\n  const toggleExpanded = (title: string) => {\n    setExpandedItems(prev => \n      prev.includes(title) \n        ? prev.filter(item => item !== title)\n        : [...prev, title]\n    );\n  };\n\n  return (\n    <div className={cn(\n      \"bg-white border-r border-gray-200 transition-all duration-300\",\n      collapsed ? \"w-16\" : \"w-64\"\n    )}>\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n        {!collapsed && (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">P</span>\n            </div>\n            <span className=\"font-semibold text-gray-900\">propr</span>\n          </div>\n        )}\n      </div>\n\n      <ScrollArea className=\"flex-1 px-3 py-4\">\n        <nav className=\"space-y-2\">\n          {menuItems.map((item) => (\n            <div key={item.title}>\n              <Button\n                variant=\"ghost\"\n                className={cn(\n                  \"w-full justify-start text-left font-normal\",\n                  collapsed ? \"px-2\" : \"px-3\",\n                  item.children && expandedItems.includes(item.title) && \"bg-blue-50\"\n                )}\n                onClick={() => item.children && toggleExpanded(item.title)}\n              >\n                <item.icon className={cn(\"h-4 w-4\", collapsed ? \"mr-0\" : \"mr-3\")} />\n                {!collapsed && (\n                  <>\n                    <span className=\"flex-1\">{item.title}</span>\n                    {item.children && (\n                      expandedItems.includes(item.title) ? \n                        <ChevronDown className=\"h-4 w-4\" /> : \n                        <ChevronRight className=\"h-4 w-4\" />\n                    )}\n                  </>\n                )}\n              </Button>\n              \n              {!collapsed && item.children && expandedItems.includes(item.title) && (\n                <div className=\"ml-6 mt-1 space-y-1\">\n                  {item.children.map((child) => (\n                    <Button\n                      key={child.title}\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className={cn(\n                        \"w-full justify-start text-left font-normal\",\n                        child.active && \"bg-blue-600 text-white hover:bg-blue-700 hover:text-white\"\n                      )}\n                    >\n                      <child.icon className=\"h-4 w-4 mr-3\" />\n                      {child.title}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </nav>\n      </ScrollArea>\n\n      <div className=\"p-4 border-t border-gray-200\">\n        <div className=\"text-xs text-gray-500\">\n          {!collapsed && (\n            <>\n              <div>Version: 3.3.3.2</div>\n              <div>LicenceType: dev edition (Overseas)</div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  )\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  )\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  variant?: \"default\" | \"destructive\"\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/header.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Globe, HelpCircle, User } from \"lucide-react\";\n\nexport function Header() {\n  return (\n    <header className=\"bg-white border-b border-gray-200 px-6 py-4\">\n      <div className=\"flex items-center justify-end space-x-4\">\n        <Button variant=\"ghost\" size=\"sm\">\n          <Globe className=\"h-4 w-4\" />\n        </Button>\n        \n        <Button variant=\"ghost\" size=\"sm\">\n          <HelpCircle className=\"h-4 w-4\" />\n        </Button>\n\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"flex items-center space-x-2\">\n              <User className=\"h-4 w-4\" />\n              <span>admin</span>\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuItem>Profile</DropdownMenuItem>\n            <DropdownMenuItem>Settings</DropdownMenuItem>\n            <DropdownMenuItem>Logout</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAMA;AAAA;AAAA;AATA;;;;;AAWO,SAAS;IACd,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;8BAC3B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;8BAGnB,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;8BAC3B,cAAA,6LAAC,qNAAA,CAAA,aAAU;wBAAC,WAAU;;;;;;;;;;;8BAGxB,6LAAC,+IAAA,CAAA,eAAY;;sCACX,6LAAC,+IAAA,CAAA,sBAAmB;4BAAC,OAAO;sCAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAQ,MAAK;gCAAK,WAAU;;kDAC1C,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;kDAAK;;;;;;;;;;;;;;;;;sCAGV,6LAAC,+IAAA,CAAA,sBAAmB;4BAAC,OAAM;;8CACzB,6LAAC,+IAAA,CAAA,mBAAgB;8CAAC;;;;;;8CAClB,6LAAC,+IAAA,CAAA,mBAAgB;8CAAC;;;;;;8CAClB,6LAAC,+IAAA,CAAA,mBAAgB;8CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM9B;KA5BgB","debugId":null}},
    {"offset": {"line": 887, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 1002, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1283, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 1473, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/node-detector.ts"],"sourcesContent":["// Enhanced service for real-time render node detection via admin node in same VPC\nexport interface RenderNode {\n  id: string;\n  serverName: string;\n  ip: string;\n  regionId: string;\n  instanceMax: number;\n  cpuUsage: string;\n  gpuUsage: string;\n  memoryUsage: string;\n  memoryUsagePercent: string;\n  diskUsage: string;\n  nodeStatus: 'Online' | 'Offline';\n  lastSeen: Date;\n  gpuInfo: {\n    name: string;\n    memory: string;\n    temperature: string;\n    utilization: string;\n  };\n  systemInfo: {\n    os: string;\n    cpu: string;\n    ram: string;\n    uptime: string;\n  };\n  connectionInfo: {\n    adminNodeIP: string;\n    connectedAt: Date;\n    heartbeatInterval: number;\n    vpcId: string;\n    subnet: string;\n  };\n  operations: {\n    canFreeze: boolean;\n    canRestart: boolean;\n    canRemote: boolean;\n    lastOperation?: string;\n    operationTime?: Date;\n  };\n}\n\nexport interface NetworkScanResult {\n  ip: string;\n  hostname: string;\n  isRenderNode: boolean;\n  responseTime: number;\n  services: string[];\n}\n\nclass NodeDetector {\n  private adminNodeIP = '10.6.0.10'; // Admin node's private IP in VPC\n  private vpcCidr = '10.6.0.0/24'; // VPC CIDR block for scanning\n  private detectedNodes: RenderNode[] = [];\n  private listeners: ((nodes: RenderNode[]) => void)[] = [];\n  private heartbeatInterval: NodeJS.Timeout | null = null;\n  private networkScanInterval: NodeJS.Timeout | null = null;\n  private nodeConnections: Map<string, Date> = new Map();\n  private renderNodePort = 8080; // Port where render nodes listen\n  private isScanning = false;\n\n  constructor() {\n    this.initializeVPCDetection();\n  }\n\n  private initializeVPCDetection() {\n    console.log(`🚀 Initializing VPC node detection from admin node: ${this.adminNodeIP}`);\n    console.log(`📡 Scanning VPC range: ${this.vpcCidr}`);\n    \n    // Start network scanning for render nodes in VPC\n    this.startNetworkScanning();\n    \n    // Start heartbeat monitoring\n    this.startHeartbeatMonitoring();\n    \n    // Initial scan\n    this.performNetworkScan();\n  }\n\n  private startNetworkScanning() {\n    if (this.networkScanInterval) {\n      clearInterval(this.networkScanInterval);\n    }\n\n    // Scan for new nodes every 10 seconds\n    this.networkScanInterval = setInterval(() => {\n      if (!this.isScanning) {\n        this.performNetworkScan();\n      }\n    }, 10000);\n  }\n\n  private startHeartbeatMonitoring() {\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n    }\n\n    // Monitor heartbeats every 2 seconds\n    this.heartbeatInterval = setInterval(() => {\n      this.checkNodeHeartbeats();\n    }, 2000);\n  }\n\n  private async performNetworkScan() {\n    this.isScanning = true;\n    console.log('🔍 Scanning VPC for render nodes...');\n\n    try {\n      // In a real implementation, this would use actual network scanning\n      // For now, we'll simulate VPC-based node discovery\n      const scanResults = await this.simulateVPCNetworkScan();\n      \n      for (const result of scanResults) {\n        if (result.isRenderNode) {\n          await this.registerRenderNode(result);\n        }\n      }\n    } catch (error) {\n      console.error('❌ Network scan failed:', error);\n    } finally {\n      this.isScanning = false;\n    }\n  }\n\n  private async simulateVPCNetworkScan(): Promise<NetworkScanResult[]> {\n    // Simulate scanning VPC subnet for render nodes\n    const potentialNodes = [\n      { ip: '10.6.0.11', hostname: 'render-node-01', services: ['render-service', 'gpu-monitor'] },\n      { ip: '10.6.0.12', hostname: 'render-node-02', services: ['render-service', 'gpu-monitor'] },\n      { ip: '10.6.0.13', hostname: 'render-node-03', services: ['render-service', 'gpu-monitor'] },\n      { ip: '10.6.0.14', hostname: 'render-node-04', services: ['render-service', 'gpu-monitor'] },\n      { ip: '10.6.0.15', hostname: 'render-node-05', services: ['render-service', 'gpu-monitor'] },\n    ];\n\n    return potentialNodes.map(node => ({\n      ...node,\n      isRenderNode: Math.random() > 0.3, // 70% chance of being a render node\n      responseTime: Math.random() * 50 + 10 // 10-60ms response time\n    }));\n  }\n\n  private async registerRenderNode(scanResult: NetworkScanResult) {\n    const existingNode = this.detectedNodes.find(n => n.ip === scanResult.ip);\n    \n    if (!existingNode) {\n      const newNode = await this.createRenderNodeFromScan(scanResult);\n      this.detectedNodes.push(newNode);\n      console.log(`✅ New render node registered: ${newNode.serverName} (${newNode.ip})`);\n      this.notifyListeners();\n    } else {\n      // Update existing node status\n      existingNode.nodeStatus = 'Online';\n      existingNode.lastSeen = new Date();\n      this.nodeConnections.set(existingNode.id, new Date());\n    }\n  }\n\n  private async createRenderNodeFromScan(scanResult: NetworkScanResult): Promise<RenderNode> {\n    const now = new Date();\n    const nodeId = scanResult.hostname || `node-${scanResult.ip.split('.').pop()}`;\n    \n    // Simulate getting detailed node information\n    const nodeInfo = this.generateNodeInfo(scanResult.ip);\n    \n    return {\n      id: nodeId,\n      serverName: scanResult.hostname || `Node-${scanResult.ip.split('.').pop()}`,\n      ip: scanResult.ip,\n      regionId: this.getRegionFromIP(scanResult.ip),\n      instanceMax: Math.floor(Math.random() * 8) + 1,\n      cpuUsage: `${Math.floor(Math.random() * 80) + 10}%`,\n      gpuUsage: `${Math.floor(Math.random() * 90) + 5}%`,\n      memoryUsage: `${(Math.random() * 20 + 8).toFixed(1)}GB`,\n      memoryUsagePercent: `${Math.floor(Math.random() * 70) + 20}%`,\n      diskUsage: `${Math.floor(Math.random() * 60) + 30}%`,\n      nodeStatus: 'Online',\n      lastSeen: now,\n      gpuInfo: nodeInfo.gpu,\n      systemInfo: nodeInfo.system,\n      connectionInfo: {\n        adminNodeIP: this.adminNodeIP,\n        connectedAt: now,\n        heartbeatInterval: 2000,\n        vpcId: 'vpc-render-cluster',\n        subnet: '10.6.0.0/24'\n      },\n      operations: {\n        canFreeze: true,\n        canRestart: true,\n        canRemote: true\n      }\n    };\n  }\n\n  private generateNodeInfo(ip: string) {\n    const gpuTypes = [\n      { name: 'NVIDIA RTX 4090', memory: '24GB', temperature: '65°C', utilization: '45%' },\n      { name: 'NVIDIA RTX 3080', memory: '10GB', temperature: '72°C', utilization: '67%' },\n      { name: 'NVIDIA RTX 3070', memory: '8GB', temperature: '68°C', utilization: '52%' },\n      { name: 'NVIDIA A100', memory: '40GB', temperature: '58°C', utilization: '89%' },\n      { name: 'NVIDIA RTX 4080', memory: '16GB', temperature: '63°C', utilization: '41%' }\n    ];\n\n    const systemConfigs = [\n      { os: 'Ubuntu 22.04 LTS', cpu: 'Intel i9-13900K', ram: '64GB', uptime: '15d 4h 23m' },\n      { os: 'Ubuntu 20.04 LTS', cpu: 'AMD Ryzen 9 5900X', ram: '32GB', uptime: '8d 12h 45m' },\n      { os: 'Ubuntu 22.04 LTS', cpu: 'Intel i7-12700K', ram: '32GB', uptime: '3d 18h 12m' },\n      { os: 'CentOS 8', cpu: 'AMD Ryzen 7 5800X', ram: '48GB', uptime: '22d 6h 33m' }\n    ];\n\n    const ipSeed = parseInt(ip.split('.').pop() || '0');\n    \n    return {\n      gpu: gpuTypes[ipSeed % gpuTypes.length],\n      system: systemConfigs[ipSeed % systemConfigs.length]\n    };\n  }\n\n  private getRegionFromIP(ip: string): string {\n    const lastOctet = parseInt(ip.split('.').pop() || '0');\n    const regions = ['us-east-1', 'us-west-2', 'eu-west-1', 'ap-southeast-1'];\n    return regions[lastOctet % regions.length];\n  }\n\n  private checkNodeHeartbeats() {\n    const now = new Date();\n    let statusChanged = false;\n\n    this.detectedNodes.forEach(node => {\n      const lastHeartbeat = this.nodeConnections.get(node.id) || node.connectionInfo.connectedAt;\n      const timeSinceLastHeartbeat = now.getTime() - lastHeartbeat.getTime();\n      \n      // Mark as offline if no heartbeat for 10 seconds\n      if (timeSinceLastHeartbeat > 10000 && node.nodeStatus === 'Online') {\n        node.nodeStatus = 'Offline';\n        statusChanged = true;\n        console.log(`⚠️ Node ${node.serverName} went offline`);\n      }\n      \n      // Update metrics for online nodes\n      if (node.nodeStatus === 'Online') {\n        this.updateNodeMetrics(node);\n      }\n    });\n\n    // Remove nodes that have been offline for more than 5 minutes\n    const initialCount = this.detectedNodes.length;\n    this.detectedNodes = this.detectedNodes.filter(node => {\n      const lastHeartbeat = this.nodeConnections.get(node.id) || node.connectionInfo.connectedAt;\n      const timeSinceLastHeartbeat = now.getTime() - lastHeartbeat.getTime();\n      return timeSinceLastHeartbeat < 300000; // 5 minutes\n    });\n\n    if (this.detectedNodes.length !== initialCount || statusChanged) {\n      this.notifyListeners();\n    }\n  }\n\n  private updateNodeMetrics(node: RenderNode) {\n    // Simulate real-time metric updates\n    const cpuDelta = (Math.random() - 0.5) * 10;\n    const gpuDelta = (Math.random() - 0.5) * 15;\n    const memDelta = (Math.random() - 0.5) * 5;\n    \n    const currentCpu = parseInt(node.cpuUsage.replace('%', ''));\n    const currentGpu = parseInt(node.gpuUsage.replace('%', ''));\n    const currentMem = parseInt(node.memoryUsagePercent.replace('%', ''));\n    \n    node.cpuUsage = `${Math.max(5, Math.min(95, currentCpu + cpuDelta)).toFixed(0)}%`;\n    node.gpuUsage = `${Math.max(10, Math.min(100, currentGpu + gpuDelta)).toFixed(0)}%`;\n    node.memoryUsagePercent = `${Math.max(15, Math.min(90, currentMem + memDelta)).toFixed(0)}%`;\n    \n    // Update GPU temperature based on usage\n    const gpuUsageNum = parseInt(node.gpuUsage.replace('%', ''));\n    const baseTemp = 45;\n    const tempVariation = (gpuUsageNum / 100) * 30;\n    node.gpuInfo.temperature = `${(baseTemp + tempVariation + Math.random() * 5).toFixed(0)}°C`;\n    node.gpuInfo.utilization = node.gpuUsage;\n    \n    node.lastSeen = new Date();\n  }\n\n  // Node operation methods\n  public async freezeNode(nodeId: string): Promise<boolean> {\n    const node = this.detectedNodes.find(n => n.id === nodeId);\n    if (!node || !node.operations.canFreeze) {\n      return false;\n    }\n\n    try {\n      console.log(`🧊 Freezing node ${node.serverName} (${node.ip})`);\n      // In real implementation: send freeze command to render node\n      node.operations.lastOperation = 'freeze';\n      node.operations.operationTime = new Date();\n      node.operations.canFreeze = false;\n      this.notifyListeners();\n      return true;\n    } catch (error) {\n      console.error(`❌ Failed to freeze node ${nodeId}:`, error);\n      return false;\n    }\n  }\n\n  public async restartNode(nodeId: string): Promise<boolean> {\n    const node = this.detectedNodes.find(n => n.id === nodeId);\n    if (!node || !node.operations.canRestart) {\n      return false;\n    }\n\n    try {\n      console.log(`🔄 Restarting node ${node.serverName} (${node.ip})`);\n      // In real implementation: send restart command to render node\n      node.nodeStatus = 'Offline';\n      node.operations.lastOperation = 'restart';\n      node.operations.operationTime = new Date();\n      \n      // Simulate restart process\n      setTimeout(() => {\n        node.nodeStatus = 'Online';\n        node.operations.canFreeze = true;\n        node.lastSeen = new Date();\n        this.notifyListeners();\n      }, 5000);\n      \n      this.notifyListeners();\n      return true;\n    } catch (error) {\n      console.error(`❌ Failed to restart node ${nodeId}:`, error);\n      return false;\n    }\n  }\n\n  public async getNodeDetails(nodeId: string): Promise<RenderNode | null> {\n    const node = this.detectedNodes.find(n => n.id === nodeId);\n    if (!node) return null;\n\n    // In real implementation: fetch detailed metrics from render node\n    console.log(`📊 Fetching details for node ${node.serverName}`);\n    return { ...node };\n  }\n\n  public async connectRemote(nodeId: string): Promise<string | null> {\n    const node = this.detectedNodes.find(n => n.id === nodeId);\n    if (!node || !node.operations.canRemote) {\n      return null;\n    }\n\n    try {\n      console.log(`🔗 Establishing remote connection to ${node.serverName} (${node.ip})`);\n      // In real implementation: establish SSH/RDP connection\n      const connectionUrl = `ssh://admin@${node.ip}:22`;\n      node.operations.lastOperation = 'remote';\n      node.operations.operationTime = new Date();\n      this.notifyListeners();\n      return connectionUrl;\n    } catch (error) {\n      console.error(`❌ Failed to connect to node ${nodeId}:`, error);\n      return null;\n    }\n  }\n\n  // Bulk operations\n  public async bulkOperation(nodeIds: string[], operation: 'freeze' | 'restart'): Promise<{ success: string[], failed: string[] }> {\n    const results: { success: string[], failed: string[] } = { success: [], failed: [] };\n    \n    for (const nodeId of nodeIds) {\n      try {\n        let success = false;\n        if (operation === 'freeze') {\n          success = await this.freezeNode(nodeId);\n        } else if (operation === 'restart') {\n          success = await this.restartNode(nodeId);\n        }\n        \n        if (success) {\n          results.success.push(nodeId);\n        } else {\n          results.failed.push(nodeId);\n        }\n      } catch (error) {\n        results.failed.push(nodeId);\n      }\n    }\n    \n    console.log(`📊 Bulk ${operation} completed: ${results.success.length} success, ${results.failed.length} failed`);\n    return results;\n  }\n\n  // Network and VPC management\n  public setVPCConfiguration(adminIP: string, vpcCidr: string, renderPort: number = 8080) {\n    this.adminNodeIP = adminIP;\n    this.vpcCidr = vpcCidr;\n    this.renderNodePort = renderPort;\n    \n    console.log(`🔧 VPC Configuration updated:`);\n    console.log(`   Admin Node: ${this.adminNodeIP}`);\n    console.log(`   VPC CIDR: ${this.vpcCidr}`);\n    console.log(`   Render Port: ${this.renderNodePort}`);\n    \n    // Restart detection with new configuration\n    this.initializeVPCDetection();\n  }\n\n  public getVPCStatus() {\n    return {\n      adminNodeIP: this.adminNodeIP,\n      vpcCidr: this.vpcCidr,\n      renderNodePort: this.renderNodePort,\n      totalNodes: this.detectedNodes.length,\n      onlineNodes: this.detectedNodes.filter(n => n.nodeStatus === 'Online').length,\n      offlineNodes: this.detectedNodes.filter(n => n.nodeStatus === 'Offline').length,\n      isScanning: this.isScanning\n    };\n  }\n\n  // Public API methods\n  public getNodes(): RenderNode[] {\n    return [...this.detectedNodes];\n  }\n\n  public subscribe(callback: (nodes: RenderNode[]) => void) {\n    this.listeners.push(callback);\n    return () => {\n      this.listeners = this.listeners.filter(l => l !== callback);\n    };\n  }\n\n  private notifyListeners() {\n    this.listeners.forEach(callback => callback([...this.detectedNodes]));\n  }\n\n  public async refreshNodes() {\n    console.log('🔄 Manual refresh triggered');\n    await this.performNetworkScan();\n  }\n\n  public getAdminNodeIP(): string {\n    return this.adminNodeIP;\n  }\n\n  public destroy() {\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n    if (this.networkScanInterval) {\n      clearInterval(this.networkScanInterval);\n      this.networkScanInterval = null;\n    }\n    console.log('🛑 Node detector destroyed');\n  }\n}\n\n// Export singleton instance\nexport const nodeDetector = new NodeDetector();\n\n// Export enhanced node management API\nexport const nodeManager = {\n  // Node operations\n  freezeNode: (nodeId: string) => nodeDetector.freezeNode(nodeId),\n  restartNode: (nodeId: string) => nodeDetector.restartNode(nodeId),\n  getNodeDetails: (nodeId: string) => nodeDetector.getNodeDetails(nodeId),\n  connectRemote: (nodeId: string) => nodeDetector.connectRemote(nodeId),\n  bulkOperation: (nodeIds: string[], operation: 'freeze' | 'restart') => nodeDetector.bulkOperation(nodeIds, operation),\n  \n  // VPC management\n  setVPCConfig: (adminIP: string, vpcCidr: string, renderPort?: number) => nodeDetector.setVPCConfiguration(adminIP, vpcCidr, renderPort),\n  getVPCStatus: () => nodeDetector.getVPCStatus(),\n  \n  // Basic operations\n  refreshNodes: () => nodeDetector.refreshNodes(),\n  getAdminIP: () => nodeDetector.getAdminNodeIP()\n};\n\n// Export types for external use - already exported above\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1939, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/monitor-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { RefreshCw, Search, Server, Cpu, HardDrive, Activity, Settings, ExternalLink } from \"lucide-react\";\nimport { nodeDetector, type RenderNode } from \"@/lib/node-detector\";\n\nexport function MonitorDashboard() {\n  const [searchFilters, setSearchFilters] = useState({\n    regionId: \"\",\n    ip: \"\",\n    serverName: \"\",\n    nodeStatus: \"All\"\n  });\n  const [refreshRate, setRefreshRate] = useState(\"5s\");\n  const [renderNodes, setRenderNodes] = useState<RenderNode[]>([]);\n  const [isDetecting, setIsDetecting] = useState(true);\n  const [adminNodeIP] = useState('10.6.0.10');\n\n  // Calculate resource overview based on detected nodes\n  const resourceOverview = {\n    gpuServer: renderNodes.length,\n    totalRunning: renderNodes.filter(n => n.nodeStatus === 'Online').reduce((sum, n) => sum + n.instanceMax, 0),\n    offline: renderNodes.filter(n => n.nodeStatus === 'Offline').length,\n    inactive: renderNodes.filter(n => n.nodeStatus === 'Offline').length,\n    cpuAlarm: renderNodes.filter(n => parseInt(n.cpuUsage) > 80).length,\n    gpuAlarm: renderNodes.filter(n => parseInt(n.gpuUsage) > 80).length,\n    memoryAlarm: renderNodes.filter(n => parseInt(n.memoryUsagePercent) > 80).length,\n    diskAlarm: renderNodes.filter(n => parseInt(n.diskUsage) > 80).length\n  };\n\n  useEffect(() => {\n    // Subscribe to node detection updates\n    const unsubscribe = nodeDetector.subscribe((nodes) => {\n      setRenderNodes(nodes);\n      setIsDetecting(false);\n    });\n\n    // Initial load\n    setRenderNodes(nodeDetector.getNodes());\n    setIsDetecting(false);\n\n    return unsubscribe;\n  }, []);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"Online\":\n        return \"bg-green-100 text-green-800\";\n      case \"Offline\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const getUsageColor = (usage: string) => {\n    const percent = parseInt(usage.replace('%', ''));\n    if (percent >= 80) return \"text-red-600 font-semibold\";\n    if (percent >= 50) return \"text-yellow-600 font-semibold\";\n    return \"text-green-600 font-semibold\";\n  };\n\n  const handleNodeOperation = async (nodeId: string, operation: 'detail' | 'freeze' | 'restart' | 'remote') => {\n    const node = renderNodes.find(n => n.id === nodeId);\n    if (!node) return;\n\n    switch (operation) {\n      case 'detail':\n        console.log('📊 Node details:', node);\n        // In real implementation: open detailed modal\n        alert(`Node Details:\\n\\nServer: ${node.serverName}\\nIP: ${node.ip}\\nRegion: ${node.regionId}\\nGPU: ${node.gpuInfo.name}\\nCPU: ${node.systemInfo.cpu}\\nRAM: ${node.systemInfo.ram}\\nUptime: ${node.systemInfo.uptime}`);\n        break;\n      \n      case 'freeze':\n        if (confirm(`Are you sure you want to freeze ${node.serverName}?`)) {\n          // In real implementation: call nodeManager.freezeNode(nodeId)\n          console.log(`🧊 Freezing node: ${node.serverName}`);\n        }\n        break;\n      \n      case 'restart':\n        if (confirm(`Are you sure you want to restart ${node.serverName}?`)) {\n          // In real implementation: call nodeManager.restartNode(nodeId)\n          console.log(`🔄 Restarting node: ${node.serverName}`);\n        }\n        break;\n      \n      case 'remote':\n        const connectionUrl = `ssh://admin@${node.ip}:22`;\n        console.log(`🔗 Remote connection: ${connectionUrl}`);\n        // In real implementation: open SSH/RDP client\n        alert(`Remote connection URL:\\n${connectionUrl}\\n\\nIn production, this would open your SSH client.`);\n        break;\n    }\n  };\n\n  const filteredNodes = renderNodes.filter(node => {\n    if (searchFilters.regionId && !node.regionId.includes(searchFilters.regionId)) return false;\n    if (searchFilters.ip && !node.ip.includes(searchFilters.ip)) return false;\n    if (searchFilters.serverName && !node.serverName.toLowerCase().includes(searchFilters.serverName.toLowerCase())) return false;\n    if (searchFilters.nodeStatus !== 'All' && node.nodeStatus !== searchFilters.nodeStatus) return false;\n    return true;\n  });\n\n  return (\n    <div className=\"space-y-6 min-h-screen\">\n      {/* Admin Node Info */}\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Server className=\"h-5 w-5 text-blue-600\" />\n            </div>\n            <div>\n              <div className=\"text-sm font-medium text-blue-900\">Admin Node IP: {adminNodeIP}</div>\n              <div className=\"text-xs text-blue-700\">VPC: 10.6.0.0/24 • Port: 8080</div>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-2 h-2 rounded-full ${isDetecting ? 'bg-yellow-500 animate-pulse' : 'bg-green-500'}`}></div>\n            <span className=\"text-xs text-gray-600\">\n              {isDetecting ? 'Scanning...' : `${renderNodes.length} nodes detected`}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* GPU Server Resource Overview */}\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">GPU Server Resource Overview</h1>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-4 mb-8\">\n          <Card className=\"border-l-4 border-l-blue-500\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-2xl font-bold text-gray-900\">{resourceOverview.gpuServer}</div>\n                  <div className=\"text-sm text-gray-600\">GPU Servers</div>\n                </div>\n                <Server className=\"h-8 w-8 text-blue-500 opacity-20\" />\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"border-l-4 border-l-green-500\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-2xl font-bold text-green-600\">{resourceOverview.totalRunning}</div>\n                  <div className=\"text-sm text-gray-600\">Running Tasks</div>\n                </div>\n                <Activity className=\"h-8 w-8 text-green-500 opacity-20\" />\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"border-l-4 border-l-red-500\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-2xl font-bold text-red-600\">{resourceOverview.offline}</div>\n                  <div className=\"text-sm text-gray-600\">Offline</div>\n                </div>\n                <div className=\"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center\">\n                  <div className=\"w-2 h-2 bg-red-500 rounded-full\"></div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"border-l-4 border-l-yellow-500\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-2xl font-bold text-yellow-600\">{resourceOverview.inactive}</div>\n                  <div className=\"text-sm text-gray-600\">Inactive</div>\n                </div>\n                <div className=\"w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center\">\n                  <div className=\"w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"border-l-4 border-l-orange-500\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-2xl font-bold text-orange-600\">{resourceOverview.cpuAlarm}</div>\n                  <div className=\"text-sm text-gray-600\">CPU Alerts</div>\n                </div>\n                <Cpu className=\"h-8 w-8 text-orange-500 opacity-20\" />\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"border-l-4 border-l-purple-500\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-2xl font-bold text-purple-600\">{resourceOverview.gpuAlarm}</div>\n                  <div className=\"text-sm text-gray-600\">GPU Alerts</div>\n                </div>\n                <Activity className=\"h-8 w-8 text-purple-500 opacity-20\" />\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"border-l-4 border-l-red-600\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-2xl font-bold text-red-600\">{resourceOverview.memoryAlarm}</div>\n                  <div className=\"text-sm text-gray-600\">Memory Alerts</div>\n                </div>\n                <HardDrive className=\"h-8 w-8 text-red-500 opacity-20\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Search Filters */}\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Region ID</label>\n              <Input \n                placeholder=\"Please Input Region ID\"\n                value={searchFilters.regionId}\n                onChange={(e) => setSearchFilters({...searchFilters, regionId: e.target.value})}\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">IP</label>\n              <Input \n                placeholder=\"Please Input IP\"\n                value={searchFilters.ip}\n                onChange={(e) => setSearchFilters({...searchFilters, ip: e.target.value})}\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Server Name</label>\n              <Input \n                placeholder=\"Server Name\"\n                value={searchFilters.serverName}\n                onChange={(e) => setSearchFilters({...searchFilters, serverName: e.target.value})}\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Node Status</label>\n              <Select value={searchFilters.nodeStatus} onValueChange={(value) => setSearchFilters({...searchFilters, nodeStatus: value})}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"All\">All</SelectItem>\n                  <SelectItem value=\"Online\">Online</SelectItem>\n                  <SelectItem value=\"Offline\">Offline</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end space-x-2\">\n            <Button \n              variant=\"outline\" \n              onClick={() => {\n                setSearchFilters({\n                  regionId: \"\",\n                  ip: \"\",\n                  serverName: \"\",\n                  nodeStatus: \"All\"\n                });\n              }}\n            >\n              Reset\n            </Button>\n            <Button>\n              <Search className=\"h-4 w-4 mr-2\" />\n              Search\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Render Server Resource Table */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>View Of Render Server Resource</CardTitle>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Button variant=\"outline\" size=\"sm\" disabled={filteredNodes.length === 0}>\n                  Freeze\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" disabled={filteredNodes.length === 0}>\n                  Restart\n                </Button>\n                <span className=\"text-sm text-gray-600\">Detected {filteredNodes.length} nodes</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Select value={refreshRate} onValueChange={setRefreshRate}>\n                  <SelectTrigger className=\"w-32\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"5s\">5s Refresh Rate</SelectItem>\n                    <SelectItem value=\"10s\">10s Refresh Rate</SelectItem>\n                    <SelectItem value=\"30s\">30s Refresh Rate</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\" \n                  onClick={() => {\n                    setIsDetecting(true);\n                    nodeDetector.refreshNodes().finally(() => setIsDetecting(false));\n                  }}\n                  disabled={isDetecting}\n                >\n                  <RefreshCw className={`h-4 w-4 ${isDetecting ? 'animate-spin' : ''}`} />\n                </Button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        \n        <CardContent>\n          {isDetecting && filteredNodes.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Activity className=\"h-12 w-12 text-gray-400 mx-auto mb-4 animate-pulse\" />\n              <p className=\"text-gray-600\">Detecting render nodes via admin node {adminNodeIP}...</p>\n            </div>\n          ) : filteredNodes.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Server className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-600\">No render nodes detected. Ensure nodes are running and accessible from admin node {adminNodeIP}</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"w-12\">\n                      <input type=\"checkbox\" className=\"rounded\" />\n                    </TableHead>\n                    <TableHead>Server Name</TableHead>\n                    <TableHead>Region ID</TableHead>\n                    <TableHead>IP</TableHead>\n                    <TableHead>Instance Max</TableHead>\n                    <TableHead>CPU Usage</TableHead>\n                    <TableHead>GPU Usage</TableHead>\n                    <TableHead>Memory Usage</TableHead>\n                    <TableHead>Memory %</TableHead>\n                    <TableHead>Disk Usage</TableHead>\n                    <TableHead>Node Status</TableHead>\n                    <TableHead>GPU Info</TableHead>\n                    <TableHead>Last Seen</TableHead>\n                    <TableHead>Operations</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredNodes.map((node) => (\n                    <TableRow key={node.id}>\n                      <TableCell>\n                        <input type=\"checkbox\" className=\"rounded\" />\n                      </TableCell>\n                      <TableCell className=\"font-medium\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Server className=\"h-4 w-4 text-gray-500\" />\n                          <span>{node.serverName}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {node.regionId}\n                        </Badge>\n                      </TableCell>\n                      <TableCell className=\"font-mono text-sm\">{node.ip}</TableCell>\n                      <TableCell>\n                        <Badge variant=\"outline\">{node.instanceMax}</Badge>\n                      </TableCell>\n                      <TableCell className={getUsageColor(node.cpuUsage)}>\n                        <div className=\"flex items-center space-x-1\">\n                          <Cpu className=\"h-3 w-3\" />\n                          <span>{node.cpuUsage}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell className={getUsageColor(node.gpuUsage)}>\n                        <div className=\"flex items-center space-x-1\">\n                          <Activity className=\"h-3 w-3\" />\n                          <span>{node.gpuUsage}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell className={getUsageColor(node.memoryUsagePercent)}>\n                        <span>{node.memoryUsage}</span>\n                      </TableCell>\n                      <TableCell className={getUsageColor(node.memoryUsagePercent)}>\n                        <span>{node.memoryUsagePercent}</span>\n                      </TableCell>\n                      <TableCell className={getUsageColor(node.diskUsage)}>\n                        <div className=\"flex items-center space-x-1\">\n                          <HardDrive className=\"h-3 w-3\" />\n                          <span>{node.diskUsage}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <Badge className={getStatusColor(node.nodeStatus)}>\n                          {node.nodeStatus}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"text-xs\">\n                          <div className=\"font-medium\">{node.gpuInfo.name}</div>\n                          <div className=\"text-gray-500\">{node.gpuInfo.memory}</div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"text-xs text-gray-500\">\n                          {node.lastSeen.toLocaleTimeString()}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex space-x-1\">\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\" \n                            className=\"h-auto px-2 py-1 text-xs text-blue-600 hover:bg-blue-50\"\n                            onClick={() => handleNodeOperation(node.id, 'detail')}\n                          >\n                            Detail\n                          </Button>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\" \n                            className=\"h-auto px-2 py-1 text-xs text-orange-600 hover:bg-orange-50\"\n                            onClick={() => handleNodeOperation(node.id, 'freeze')}\n                            disabled={node.nodeStatus === 'Offline' || !node.operations.canFreeze}\n                          >\n                            Freeze\n                          </Button>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\" \n                            className=\"h-auto px-2 py-1 text-xs text-red-600 hover:bg-red-50\"\n                            onClick={() => handleNodeOperation(node.id, 'restart')}\n                            disabled={node.nodeStatus === 'Offline' || !node.operations.canRestart}\n                          >\n                            Restart\n                          </Button>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\" \n                            className=\"h-auto px-2 py-1 text-xs text-green-600 hover:bg-green-50\"\n                            onClick={() => handleNodeOperation(node.id, 'remote')}\n                            disabled={node.nodeStatus === 'Offline' || !node.operations.canRemote}\n                          >\n                            Remote\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3501, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Sidebar } from \"@/components/dashboard/sidebar\";\nimport { Header } from \"@/components/dashboard/header\";\nimport { MonitorDashboard } from \"@/components/dashboard/monitor-dashboard\";\n\nexport default function Home() {\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar \n        collapsed={sidebarCollapsed} \n        onToggle={() => setSidebarCollapsed(!sidebarCollapsed)} \n      />\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header />\n        <main className=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-50 p-6\">\n          <MonitorDashboard />\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,6IAAA,CAAA,UAAO;gBACN,WAAW;gBACX,UAAU,IAAM,oBAAoB,CAAC;;;;;;0BAEvC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,4IAAA,CAAA,SAAM;;;;;kCACP,6LAAC;wBAAK,WAAU;kCACd,cAAA,6LAAC,0JAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;;;;;;;AAK3B;GAjBwB;KAAA","debugId":null}}]
}